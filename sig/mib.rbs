module NETSNMP
  module MIB
    type import = {ids: Array[{name: string}], name: string} | {ids: {name: string}, name: string}

    OIDREGEX: Regexp
    MIBDIRS: Array[String]
    PARSER: Parser

    @parser_mutex: Thread::Mutex
    @modules_loaded: Array[String]
    @object_identifiers: Hash[String, String]

    def self?.oid: (oid identifier) -> String?

    def self?.load: (String mod) -> void

    def self?.load_imports: ((Array[import] | import)? data) -> Hash[String, Array[String]]?
    def self?.load_defaults: () -> void
  end
end
